[user]
    name        = Marco Farrugia
    email       = afmarco@gmail.com 

[url "https://"]
    insteadOf = git://

[core]
#    excludesfile = ~/.vcs_ignore                                                                           ## The Global gitignore file.
	pager = diff-so-fancy | less --tabs=4 -RFX
    fscache = true
	autocrlf = input
    
[pull]
    rebase = true                                                                                           ## Rebase instead of merging pulls.
    
[pretty]
    # Like oneline, but with author, decorate, and relative-date.
    oneline-plus = "%C(yellow)%h%C(auto)%d %C(reset)%C(green)[%aE]%C(white) %s %C(green)(%cr)%C(reset)"


# Make `git mergetool` default to using intellij.
[merge]
   tool = intellij
[mergetool "intellij"]
   cmd = idea merge $(cd $(dirname "$LOCAL") && pwd)/$(basename "$LOCAL") $(cd $(dirname "$REMOTE") && pwd)/$(basename "$REMOTE") $(cd $(dirname "$BASE") && pwd)/$(basename "$BASE") $(cd $(dirname "$MERGED") && pwd)/$(basename "$MERGED")
   trustExitCode = true

# Make `git difftool` default to using intellij.
[diff]
   tool = intellij
[difftool "intellij"]
   cmd = idea diff $(cd $(dirname "$LOCAL") && pwd)/$(basename "$LOCAL") $(cd $(dirname "$REMOTE") && pwd)/$(basename "$REMOTE")

[alias]
    paus    = commit -am \"STASHED COMMIT! -- NOT FOR PUSHING!\"                                            ## Simpler to keep track of than stashing.
    resu    = reset HEAD^

    l       = log --pretty=oneline-plus                                                                     ## Prettier log.
    lu      = log --pretty=oneline-plus @{u}..                                                              ## Shows "Upstream", aka unpushed, commits.
    sl      = shortlog --format='%Cred%h %Creset%s %Cgreen(%cr)' -30                                        ## Pretty short log.
    
    c       = commit -m
    fc      = commit --amend -m                                                                             ## Fix the last commit message.   
    ca      = commit -a --amend                                                                             ## Adds working files to the previous commit.
    cm      = commit -am                                                                                    ## Stages changed files and commits w/ message.
    
    df      = diff --name-only                                                                              ## Diff files.
    
    shf     = show --oneline --name-only                                                                    ## Show files.
    
    s       = status -sb                                                                                    ##
                                                                                                            ##
    all     = submodule foreach git                                                                         ##
    each    = submodule foreach                                                                             ##

    patch   = "!f(){ git log --pretty=email --patch-with-stat --reverse  -- $1 > my.patch ; }; f"           ## Writes for a dir/file's full history.
                                                                                                            
    f       = "!git fetch; git l ..@{u}"                                                                    ## Fetches and shows fetched commits.
    in      = log --pretty=oneline-plus ..@{u}                                                              ## Shows fetched commits. 
    vers    = "!f(){ git ls-remote --tags | grep $1 ;}; f"                                                  ## Shows tag for a commit (since we're not pulling tags)
    
    current-branch = !git rev-parse --abbrev-ref HEAD
                                                                                                            
[log]                                                                                                       
    abbrevCommit    = true                                                                                  ## Commit hash shortened.
    topoOrder       = true                                                                                  ## Log listed in a topological ordering.

[help]
    autocorrect = 1

[rerere]
    enabled = 1

### NOTES ###
# Push all but last X commits           :: git push origin master~X:master
# Ignore changes to a tracked file      :: git update-index --assume-unchanged path/to/file.txt

# Inline include ts .gitconfig
[include]
    path = ~/.dots/twosigma-specific/_gitconfig

